/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package carrental;

import com.mysql.cj.protocol.Resultset;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author KAVEEN
 */
public class Rents extends javax.swing.JFrame {

    /**
     * Creates new form Rents
     */
    public Rents() {
        initComponents();
        Displaycars();
        displaycust();
        DisplaycarsRent();
    }
    
    
     Connection con ;
    Statement st;
    Resultset Rs;
    PreparedStatement pst;

        private void Displaycars()
    {
        DefaultTableModel model = (DefaultTableModel) tblCarList.getModel();
        model.setRowCount(0);
        String Status = "Available";
    
        try {
            String url = "jdbc:mysql://localhost:3306/ajcar";
            String username = "Kaveen";
            String password = "123";

            try (Connection conn = DriverManager.getConnection(url, username, password)) {
                String sql = "SELECT * FROM cartbl Where status ='"+Status+"'" ;
                try (PreparedStatement stmt = conn.prepareStatement(sql)) {
                    
                    try (ResultSet rs = stmt.executeQuery()) {
                        while (rs.next()) {
                            String regno = rs.getString("carReg");
                            String brand = rs.getString("brand");
                            String Model = rs.getString("model");
                            String status = rs.getString("status");
                            String price = rs.getString("price");
                            Object[] rowData = { regno, brand, Model, status,price };
                            model.addRow(rowData);
                        }
                    }
                }
            }
        } catch (SQLException e) {
}
  }
      
        
        
        
        
            private void DisplaycarsRent()
    {
        DefaultTableModel model = (DefaultTableModel) tblCarsRent.getModel();
        model.setRowCount(0);
        
    
 try {
            String url = "jdbc:mysql://localhost:3306/ajcar";
            String username = "Kaveen";
            String password = "123";

            try (Connection conn = DriverManager.getConnection(url, username, password)) {
                String sql = "SELECT * FROM tblrent";
                try (PreparedStatement stmt = conn.prepareStatement(sql)) {
                    
                    try (ResultSet rs = stmt.executeQuery()) {
                        while (rs.next()) {
                            String RegID = rs.getString("RegID");
                            String RentID = rs.getString("RentID");
                            String customername = rs.getString("CusName");
                            String rentDate = rs.getString("RentDate");
                            String returnDate = rs.getString("ReturnDate");
                            String fee = rs.getString("Fees");
                            Object[] rowData = { RegID, RentID, customername, rentDate,returnDate,fee};
                            model.addRow(rowData);
                        }
                    }
                }
            }
        } catch (SQLException e) {
}
  }
        
        
        
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtRentID1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lblAjCarRental = new javax.swing.JLabel();
        lblAjCarRental1 = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        lblCustomer = new javax.swing.JLabel();
        lblCars = new javax.swing.JLabel();
        lblReturnCar = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        txtRentID = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        lblRentID = new javax.swing.JLabel();
        btnsave = new javax.swing.JButton();
        lblCustomerName = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        lblCarList = new javax.swing.JLabel();
        lblReturnDate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarList = new javax.swing.JTable();
        lblRentDate = new javax.swing.JLabel();
        lblManageCars = new javax.swing.JLabel();
        lblRegister = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jdateReturnDate = new com.toedter.calendar.JDateChooser();
        jdateRentDate = new com.toedter.calendar.JDateChooser();
        txtRegistration = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCarsRent = new javax.swing.JTable();
        lblReturnDate1 = new javax.swing.JLabel();
        txtFees = new javax.swing.JTextField();
        cmbCustomerName = new javax.swing.JComboBox<>();
        lblCarList1 = new javax.swing.JLabel();

        txtRentID1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtRentID1.setForeground(new java.awt.Color(255, 0, 51));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(255, 0, 51));

        lblAjCarRental.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblAjCarRental.setForeground(new java.awt.Color(51, 51, 51));
        lblAjCarRental.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAjCarRental.setText("Service");
        lblAjCarRental.setName("lblAJCarRental"); // NOI18N

        lblAjCarRental1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblAjCarRental1.setForeground(new java.awt.Color(51, 51, 51));
        lblAjCarRental1.setText("AJ Car Rental");
        lblAjCarRental1.setName("lblAJCarRental"); // NOI18N

        lblImage.setIcon(new javax.swing.ImageIcon("C:\\Users\\KAVEEN\\Desktop\\New folder (6)\\images_(2)-transformed.png")); // NOI18N

        lblCustomer.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        lblCustomer.setForeground(new java.awt.Color(255, 255, 255));
        lblCustomer.setText("Customer");
        lblCustomer.setName("lblAJCarRental"); // NOI18N
        lblCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCustomerMouseClicked(evt);
            }
        });

        lblCars.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        lblCars.setForeground(new java.awt.Color(255, 255, 255));
        lblCars.setText("Cars");
        lblCars.setName("lblAJCarRental"); // NOI18N
        lblCars.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCarsMouseClicked(evt);
            }
        });

        lblReturnCar.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        lblReturnCar.setForeground(new java.awt.Color(255, 255, 255));
        lblReturnCar.setText("Return Car");
        lblReturnCar.setName("lblAJCarRental"); // NOI18N
        lblReturnCar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblReturnCarMouseClicked(evt);
            }
        });

        btnLogout.setBackground(new java.awt.Color(255, 0, 51));
        btnLogout.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAjCarRental1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCustomer)
                            .addComponent(lblCars)
                            .addComponent(lblReturnCar)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(lblAjCarRental))
                            .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(lblImage)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblAjCarRental1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAjCarRental)
                .addGap(125, 125, 125)
                .addComponent(lblCustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCars)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblReturnCar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnClose.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnClose.setForeground(new java.awt.Color(255, 0, 51));
        btnClose.setText("X");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 748, Short.MAX_VALUE)
                .addComponent(btnClose))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 27, Short.MAX_VALUE)
        );

        txtRentID.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtRentID.setForeground(new java.awt.Color(255, 0, 51));

        btnEdit.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 0, 51));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        lblRentID.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblRentID.setForeground(new java.awt.Color(255, 0, 51));
        lblRentID.setText("Rent ID");
        lblRentID.setName("lblAJCarRental"); // NOI18N

        btnsave.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        btnsave.setForeground(new java.awt.Color(255, 0, 51));
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        lblCustomerName.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblCustomerName.setForeground(new java.awt.Color(255, 0, 51));
        lblCustomerName.setText("Customer Name");
        lblCustomerName.setName("lblAJCarRental"); // NOI18N

        btnReset.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 0, 51));
        btnReset.setText("Clear");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lblCarList.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblCarList.setForeground(new java.awt.Color(255, 0, 51));
        lblCarList.setText("Car List");
        lblCarList.setName("lblAJCarRental"); // NOI18N

        lblReturnDate.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblReturnDate.setForeground(new java.awt.Color(255, 0, 51));
        lblReturnDate.setText("Return Date");
        lblReturnDate.setName("lblAJCarRental"); // NOI18N

        tblCarList.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tblCarList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Registration", "Brand", "Model", "Status", "Price"
            }
        ));
        tblCarList.setRowHeight(25);
        jScrollPane1.setViewportView(tblCarList);

        lblRentDate.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblRentDate.setForeground(new java.awt.Color(255, 0, 51));
        lblRentDate.setText("Rent Date");
        lblRentDate.setName("lblAJCarRental"); // NOI18N

        lblManageCars.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
        lblManageCars.setForeground(new java.awt.Color(255, 0, 51));
        lblManageCars.setText("Cars Rent");
        lblManageCars.setName("lblAJCarRental"); // NOI18N

        lblRegister.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblRegister.setForeground(new java.awt.Color(255, 0, 51));
        lblRegister.setText("Registration ");
        lblRegister.setName("lblAJCarRental"); // NOI18N

        btnDelete.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 0, 51));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtRegistration.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtRegistration.setForeground(new java.awt.Color(255, 0, 51));

        tblCarsRent.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tblCarsRent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Registration", "Rent ID", "Customer Name", "Rent Date", "Return Date", "Fees"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblCarsRent.setRowHeight(25);
        jScrollPane2.setViewportView(tblCarsRent);

        lblReturnDate1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblReturnDate1.setForeground(new java.awt.Color(255, 0, 51));
        lblReturnDate1.setText("Fees");
        lblReturnDate1.setName("lblAJCarRental"); // NOI18N

        txtFees.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtFees.setForeground(new java.awt.Color(255, 0, 51));

        lblCarList1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblCarList1.setForeground(new java.awt.Color(255, 0, 51));
        lblCarList1.setText("Cars Rent");
        lblCarList1.setName("lblAJCarRental"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(lblCarList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCarList1)
                        .addGap(181, 181, 181))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(288, 288, 288)
                                .addComponent(lblManageCars))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRentID, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                    .addComponent(lblRentID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblRentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cmbCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jdateRentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jdateReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFees, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblReturnDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(207, 207, 207)
                                .addComponent(btnsave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnReset))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblManageCars)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblReturnDate)
                                .addComponent(lblReturnDate1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCustomerName)
                                .addComponent(lblRentDate)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdateRentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdateReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRegister)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRentID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnEdit)
                    .addComponent(btnsave)
                    .addComponent(btnReset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarList)
                    .addComponent(lblCarList1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

              
          
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
              
String url = "jdbc:mysql://localhost:3306/ajcar";
String username = "Kaveen";
String password = "123";

Connection connection = null; // Initialize the connection

try {
    connection = DriverManager.getConnection(url, username, password);

    String sql = "UPDATE tblrent SET RegID = ?, CusName = ?, RentDate = ? , ReturnDate = ? , Fees = ? WHERE RentID = ?";
    PreparedStatement statement = connection.prepareStatement(sql);
   // Format date values using SimpleDateFormat
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Adjust the pattern to match your date format

    String rentDate = dateFormat.format(jdateRentDate.getDate());
    String returnDate = dateFormat.format(jdateReturnDate.getDate());

// ...

// Set the date values in the PreparedStatement


    statement.setString(1, txtRegistration.getText());
    statement.setString(2, cmbCustomerName.getSelectedItem().toString());
    statement.setString(3, rentDate);
    statement.setString(4, returnDate);
    statement.setInt(5, Integer.parseInt(txtFees.getText()));
    statement.setString(6, txtRentID.getText());
   

    int rowsAffected = statement.executeUpdate();
    if (rowsAffected > 0) {
        JOptionPane.showMessageDialog(null, "Updated successfully.");
        DisplaycarsRent();
        btnResetActionPerformed(evt);
        
    } else {
        JOptionPane.showMessageDialog(null, "No records were updated.", "Update Error", JOptionPane.WARNING_MESSAGE);
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
} catch (HeadlessException | NumberFormatException exception) {
    JOptionPane.showMessageDialog(null, "Data cannot be updated because of: " + exception, "Update Error", JOptionPane.ERROR_MESSAGE);
} finally {
    if (connection != null) {
        try {
            connection.close(); // Close the connection when done
        } catch (SQLException e) {
            // Handle any potential closing error
            e.printStackTrace();
        }
    
    }//GEN-LAST:event_btnEditActionPerformed
}
    }
    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
           try {
    String reg = txtRegistration.getText();
    String ID = txtRentID.getText();
    String fees = txtFees.getText();
    String custName = cmbCustomerName.getSelectedItem().toString();
    SimpleDateFormat Date_Format = new SimpleDateFormat("yyy-MM-dd");
    String date = Date_Format.format(jdateRentDate.getDate());
    SimpleDateFormat Date_Format1 = new SimpleDateFormat("yyy-MM-dd");
    String due = Date_Format1.format(jdateReturnDate.getDate());
    

    // Validate input fields
    if (reg.isEmpty() || ID.isEmpty() || fees.isEmpty() || custName.isEmpty() || date.isEmpty() || due.isEmpty() ) {
        JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Input Error", JOptionPane.ERROR_MESSAGE);
    } else {
        try {
            int Fees = Integer.parseInt(fees);
            if (Fees <= 0) {
                JOptionPane.showMessageDialog(this, "Fees must be a positive integer.", "Input Error", JOptionPane.ERROR_MESSAGE);
            } else {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ajcar", "Kaveen", "123");
                PreparedStatement add = con.prepareStatement("insert into tblrent values(?,?,?,?,?,?)");


                add.setString(1, reg);
                add.setString(2, ID);
                add.setString(3, custName);
                add.setString(4, date);
                add.setString(5,  due);
                add.setInt(6, Fees);

                int row = add.executeUpdate();
                if (row > 0) {
                    JOptionPane.showMessageDialog(this, " Added Successfully");
                   DisplaycarsRent();
                    btnResetActionPerformed(evt);
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to add .", "Database Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid price format. Please enter a valid integer.", "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }

    }
} catch (HeadlessException e) {
    JOptionPane.showMessageDialog(rootPane, e.getMessage());
}        catch(Exception e){
        JOptionPane.showMessageDialog(this, "Please Fill all!.", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
         txtRegistration.setText(null);
         txtRentID.setText(null);
         txtFees.setText(null);
         jdateRentDate.setDate(null);
         jdateReturnDate.setDate(null);
         cmbCustomerName.setSelectedItem(null);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         String url = "jdbc:mysql://localhost:3306/ajcar";
        String username = "Kaveen";
        String password = "123";

        // SQL query to delete voter details
        String sql = "DELETE FROM tblrent WHERE RentID = ?";

        try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            String Rent = txtRentID.getText();
            stmt.setString(1, Rent);

            // Execute the delete query
            int rowsAffected = stmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(rootPane, "user account deleted successfully.");
                DisplaycarsRent();
                btnResetActionPerformed(evt);
                
                

            } else {
                JOptionPane.showMessageDialog(rootPane, "No matching user details found.");

            }

        } catch (SQLException e) {
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new login().setVisible(true);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void lblCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCustomerMouseClicked
        // TODO add your handling code here:
              this.dispose();
            try{
             Customer c = new Customer();
            c.setVisible(true);}
        catch(Exception e){
        
        }
        
    }//GEN-LAST:event_lblCustomerMouseClicked

    private void lblCarsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCarsMouseClicked
        // TODO add your handling code here:
            this.dispose();
        try{
         cars c = new cars();
        c.setVisible(true);}
        catch(Exception e){
        
        }
    }//GEN-LAST:event_lblCarsMouseClicked
public void displaycust(){
  
        String url = "jdbc:mysql://localhost:3306/ajcar";
        String username = "Kaveen";
        String password = "123";

 try {
            // Create a database connection
            Connection conn = DriverManager.getConnection(url, username, password);

            // Create a SQL query to retrieve customer names from a "customers" table
            String query = "SELECT CName FROM customer";

            // Create a statement and execute the query
            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery(query);

            // Create a list to store the retrieved customer names
            ArrayList<String> customerNames = new ArrayList<>();

            // Fetch and populate customer names from the result set
            while (resultSet.next()) {
                customerNames.add(resultSet.getString("CName"));
            }

            // Add the customer names to the JComboBox
            for (String customerName : customerNames) {
                cmbCustomerName.addItem(customerName);
            }

            conn.close(); // Close the database connection
        } catch (Exception e) {
            e.printStackTrace();
        }
}


    private void lblReturnCarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReturnCarMouseClicked
        // TODO add your handling code here:
        this.dispose();
        Return re = new Return();
        re.setVisible(true);
    }//GEN-LAST:event_lblReturnCarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rents().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnsave;
    private javax.swing.JComboBox<String> cmbCustomerName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdateRentDate;
    private com.toedter.calendar.JDateChooser jdateReturnDate;
    private javax.swing.JLabel lblAjCarRental;
    private javax.swing.JLabel lblAjCarRental1;
    private javax.swing.JLabel lblCarList;
    private javax.swing.JLabel lblCarList1;
    private javax.swing.JLabel lblCars;
    private javax.swing.JLabel lblCustomer;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblManageCars;
    private javax.swing.JLabel lblRegister;
    private javax.swing.JLabel lblRentDate;
    private javax.swing.JLabel lblRentID;
    private javax.swing.JLabel lblReturnCar;
    private javax.swing.JLabel lblReturnDate;
    private javax.swing.JLabel lblReturnDate1;
    private javax.swing.JTable tblCarList;
    private javax.swing.JTable tblCarsRent;
    private javax.swing.JTextField txtFees;
    private javax.swing.JTextField txtRegistration;
    private javax.swing.JTextField txtRentID;
    private javax.swing.JTextField txtRentID1;
    // End of variables declaration//GEN-END:variables
}
